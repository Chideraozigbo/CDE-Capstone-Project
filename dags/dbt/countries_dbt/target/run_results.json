{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.8", "generated_at": "2024-11-17T13:28:02.466808Z", "invocation_id": "0afec169-2646-491d-8c42-0efd561d124e", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-17T13:27:40.443332Z", "completed_at": "2024-11-17T13:27:40.468722Z"}, {"name": "execute", "started_at": "2024-11-17T13:27:40.469199Z", "completed_at": "2024-11-17T13:27:41.998517Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.024700880050659, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b86ea7-0305-65f5-0002-767a00015946"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.countries_dbt.stg_country", "compiled": true, "compiled_code": "-- This query extracts raw country information, including demographic, political, and geographical details, from the `country_data` source table.\n-- The dataset includes fields such as country name, independence status, capital, region, population, languages, and currency information.\n\n\nWITH raw_countries AS(\n    SELECT\n        \n    md5(cast(coalesce(cast(country_name as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT))\n as country_id,\n        TRIM(Country_Name) AS country_name,\n        TRIM(independence) AS independence,\n        TRIM(united_nation_members) AS united_nation_members,\n        TRIM(start_of_week) AS start_of_week,\n        TRIM(official_name) AS official_name,\n        TRIM(common_native_name) AS common_native_name,\n        TRIM(currency_code) AS currency_code,\n        TRIM(currency_name) AS currency_name,\n        TRIM(currency_symbol) AS currency_symbol,\n        TRIM(country_code) AS country_code,\n        TRIM(capital) AS capital,\n        TRIM(region) AS region,\n        TRIM(subregion) AS subregion,\n        TRIM(area) AS area,\n        TRIM(population) AS population,\n        TRIM(continents) AS continents\n    from country_database.raw_country_schema.country_data\n)\nSELECT\n    *\nFROM raw_countries", "relation_name": "country_database._staging_schema.stg_country"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-17T13:27:42.474759Z", "completed_at": "2024-11-17T13:27:42.480911Z"}, {"name": "execute", "started_at": "2024-11-17T13:27:42.481466Z", "completed_at": "2024-11-17T13:27:43.733551Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.677849292755127, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b86ea7-0305-65f5-0002-767a0001594a"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.countries_dbt.stg_country_languages", "compiled": true, "compiled_code": "-- This query retrieves a list of languages spoken in each country by flattening \n-- the comma-separated `languages` field from `raw country_data` table. \n-- It uses Snowflake\u2019s `LATERAL FLATTEN` function on the array of languages to create a \n-- row for each language associated with a given `country_code`.\n\nSELECT \n    country_code,\n    TRIM(value) AS language\nFROM country_database.raw_country_schema.country_data,\nLATERAL FLATTEN(input => SPLIT(languages, ', ')) AS language", "relation_name": "country_database._staging_schema.stg_country_languages"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-17T13:27:44.158669Z", "completed_at": "2024-11-17T13:27:44.164545Z"}, {"name": "execute", "started_at": "2024-11-17T13:27:44.165004Z", "completed_at": "2024-11-17T13:27:46.506387Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.7069649696350098, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b86ea7-0305-665e-0002-767a0001a29e"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.countries_dbt.dim_country", "compiled": true, "compiled_code": "\n\nWITH country_base AS (\n    SELECT \n        country_id,\n        country_code,\n        Country_Name,\n        official_name,\n        common_native_name,\n        independence,\n        united_nation_members,\n        capital,\n        region,\n        subregion,\n        continents,\n        start_of_week\n    FROM country_database._staging_schema.stg_country\n)\nSELECT \n    *,\n    current_timestamp() as created_at,\n    'N/A' as record_status\nFROM country_base", "relation_name": "country_database._mart_schema.dim_country"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-17T13:27:46.870432Z", "completed_at": "2024-11-17T13:27:46.876637Z"}, {"name": "execute", "started_at": "2024-11-17T13:27:46.877185Z", "completed_at": "2024-11-17T13:27:48.610573Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.3522961139678955, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b86ea7-0305-665e-0002-767a0001a2a2"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.countries_dbt.dim_currency", "compiled": true, "compiled_code": "\nWITH currency_base AS (\n    SELECT DISTINCT currency_code,\n        currency_name,\n        currency_symbol\n    FROM country_database._staging_schema.stg_country\n    WHERE currency_code IS NOT NULL\n)\nSELECT \n    md5(cast(coalesce(cast(currency_code as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as currency_id,\n    *,\n    current_timestamp() as created_at,\n    'N/A' as record_status\nFROM currency_base", "relation_name": "country_database._mart_schema.dim_currency"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-17T13:27:49.229751Z", "completed_at": "2024-11-17T13:27:49.237351Z"}, {"name": "execute", "started_at": "2024-11-17T13:27:49.237860Z", "completed_at": "2024-11-17T13:27:51.443912Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.6475679874420166, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b86ea7-0305-6976-0002-767a00019546"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.countries_dbt.dim_language", "compiled": true, "compiled_code": "\nWITH language_base AS (\n    SELECT DISTINCT\n        language\n    FROM country_database._staging_schema.stg_country_languages\n    WHERE language IS NOT NULL\n)\nSELECT \n    md5(cast(coalesce(cast(language as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as language_id,\n    language,\n    current_timestamp() as created_at,\n    'N/A' as record_status\nFROM language_base", "relation_name": "country_database._mart_schema.dim_language"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-17T13:27:51.885314Z", "completed_at": "2024-11-17T13:27:51.890255Z"}, {"name": "execute", "started_at": "2024-11-17T13:27:51.890703Z", "completed_at": "2024-11-17T13:27:54.640410Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 3.3083436489105225, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b86ea7-0305-65f5-0002-767a0001594e"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.countries_dbt.bridge_country_languages", "compiled": true, "compiled_code": "\nWITH exploded_languages AS (\n    -- Get country codes and exploded languages from the staging table\n    SELECT \n        c.country_code,\n        l.language\n    FROM \n        country_database._staging_schema.stg_country c\n    JOIN \n        country_database._staging_schema.stg_country_languages l\n    ON c.country_code = l.country_code\n),\n\nmapped_ids AS (\n    -- Map the exploded data to their respective surrogate keys\n    SELECT\n        d.country_id,\n        dl.language_id\n    FROM \n        exploded_languages el\n    LEFT JOIN country_database._mart_schema.dim_country d \n    ON el.country_code = d.country_code\n    LEFT JOIN country_database._mart_schema.dim_language dl \n    ON el.language = dl.language\n),\n\ndeduplicated_bridge AS (\n    -- Ensure no duplicates in the bridge table\n    SELECT DISTINCT\n        country_id,\n        language_id\n    FROM mapped_ids\n)\n\n-- Final output\nSELECT \n    country_id,\n    language_id\nFROM \n    deduplicated_bridge", "relation_name": "country_database._mart_schema.bridge_country_languages"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-17T13:27:55.199136Z", "completed_at": "2024-11-17T13:27:55.207349Z"}, {"name": "execute", "started_at": "2024-11-17T13:27:55.207928Z", "completed_at": "2024-11-17T13:27:56.850314Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.0298337936401367, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b86ea7-0305-6976-0002-767a0001954a"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.countries_dbt.fact_country_metric", "compiled": true, "compiled_code": "WITH country_base AS (\n    SELECT \n        DISTINCT\n        c.country_id,\n        c.country_name,\n        CAST(c.population AS FLOAT) AS population,\n        CAST(c.area AS FLOAT) AS area,\n        c.currency_code,\n        c.region,\n        c.subregion\n    FROM country_database._staging_schema.stg_country c\n    WHERE c.population IS NOT NULL AND c.area IS NOT NULL\n),\n\npopulation_density AS (\n    SELECT \n        cb.country_id,\n        cb.population / NULLIF(cb.area, 0) AS population_density \n    FROM country_base cb\n),\n\ndensity_category AS (\n    SELECT \n        pd.country_id,\n        pd.population_density,\n        CASE \n            WHEN pd.population_density < 50 THEN 'Low Density'\n            WHEN pd.population_density BETWEEN 50 AND 300 THEN 'Medium Density'\n            ELSE 'High Density'\n        END AS density_category\n    FROM population_density pd\n),\n\nlanguage_diversity AS (\n    SELECT \n        bcl.country_id,\n        COUNT(DISTINCT bcl.language_id) AS language_count\n    FROM country_database._mart_schema.bridge_country_languages bcl\n    GROUP BY bcl.country_id\n),\n\ncurrency_mapping AS (\n    SELECT DISTINCT\n        cb.country_id,\n        dc.currency_id\n    FROM country_base cb\n    LEFT JOIN country_database._mart_schema.dim_currency dc\n    ON cb.currency_code = dc.currency_code\n),\n\nfact_metrics AS (\n    SELECT DISTINCT\n        cb.country_id,\n        cb.population,\n        cb.area,\n        cm.currency_id,\n        dc.population_density,\n        dc.density_category,\n        ld.language_count,\n        CASE \n            WHEN ld.language_count = 1 THEN 'Monolingual'\n            WHEN ld.language_count BETWEEN 2 AND 4 THEN 'Moderately Multilingual'\n            ELSE 'Highly Multilingual'\n        END AS language_diversity_category\n    FROM country_base cb\n    LEFT JOIN density_category dc ON cb.country_id = dc.country_id\n    LEFT JOIN language_diversity ld ON cb.country_id = ld.country_id\n    LEFT JOIN currency_mapping cm ON cb.country_id = cm.country_id\n)\n\nSELECT \n    DISTINCT *, \n    current_timestamp() AS created_at,\n    'N/A' AS record_status\nFROM fact_metrics", "relation_name": "country_database._mart_schema.fact_country_metric"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-17T13:27:57.235421Z", "completed_at": "2024-11-17T13:27:57.242224Z"}, {"name": "execute", "started_at": "2024-11-17T13:27:57.242669Z", "completed_at": "2024-11-17T13:27:58.568782Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.7817082405090332, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b86ea7-0305-6976-0002-767a0001954e"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.countries_dbt.language_by_country_analysis", "compiled": true, "compiled_code": "\n\nSELECT\n    l.language,\n    COUNT(DISTINCT f.country_id) AS country_count,\n    SUM(f.population) AS total_population,\n    AVG(f.population_density) AS avg_population_density\nFROM country_database._mart_schema.bridge_country_languages b\nJOIN country_database._mart_schema.dim_language l\n    ON b.language_id = l.language_id\nJOIN country_database._mart_schema.fact_country_metric f\n    ON b.country_id = f.country_id\nGROUP BY l.language", "relation_name": "country_database._analytical_schema.language_by_country_analysis"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-17T13:27:59.022725Z", "completed_at": "2024-11-17T13:27:59.028928Z"}, {"name": "execute", "started_at": "2024-11-17T13:27:59.029462Z", "completed_at": "2024-11-17T13:28:00.313875Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.6698148250579834, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b86ea8-0305-6976-0002-767a00019552"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.countries_dbt.population_language_analysis", "compiled": true, "compiled_code": "\n\nwith population_analysis as (\nSELECT \n    DISTINCT\n    d.country_name,\n    f.population,\n    f.area,\n    f.population_density,\n    f.density_category,\n    f.language_count,\n    f.language_diversity_category,\n    d.region,\n    d.subregion,\n    c.currency_name,\n    c.currency_symbol\nFROM country_database._mart_schema.fact_country_metric f\nJOIN country_database._mart_schema.dim_country d\n    ON f.country_id = d.country_id\nLEFT JOIN country_database._mart_schema.dim_currency c\n    ON f.currency_id = c.currency_id\n)\n\nselect \n    distinct *\nfrom population_analysis", "relation_name": "country_database._analytical_schema.population_language_analysis"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-17T13:28:00.697427Z", "completed_at": "2024-11-17T13:28:00.703574Z"}, {"name": "execute", "started_at": "2024-11-17T13:28:00.704150Z", "completed_at": "2024-11-17T13:28:02.020516Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.764435052871704, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b86ea8-0305-65f5-0002-767a00015952"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.countries_dbt.regional_metrics_summary", "compiled": true, "compiled_code": "\n\nSELECT\n    d.region,\n    d.subregion,\n    COUNT(*) AS country_count,\n    SUM(f.population) AS total_population,\n    AVG(f.population_density) AS avg_population_density,\n    MAX(f.population_density) AS max_population_density,\n    AVG(f.language_count) AS avg_language_count,\n    MAX(f.language_count) AS max_language_count\nFROM country_database._mart_schema.fact_country_metric f\nJOIN country_database._mart_schema.dim_country d\n    ON f.country_id = d.country_id\nGROUP BY d.region, d.subregion", "relation_name": "country_database._analytical_schema.regional_metrics_summary"}], "elapsed_time": 34.88100290298462, "args": {"which": "run", "log_format": "default", "populate_cache": true, "log_path": "/Users/user/Documents/cde_dbt/cde-project/dags/dbt/countries_dbt/logs", "log_format_file": "debug", "invocation_command": "dbt run", "log_file_max_bytes": 10485760, "profiles_dir": "/Users/user/.dbt", "partial_parse_file_diff": true, "print": true, "version_check": true, "log_level": "info", "printer_width": 80, "project_dir": "/Users/user/Documents/cde_dbt/cde-project/dags/dbt/countries_dbt", "warn_error_options": {"include": [], "exclude": []}, "static_parser": true, "defer": false, "macro_debugging": false, "show_resource_report": false, "empty": false, "enable_legacy_logger": false, "vars": {}, "write_json": true, "strict_mode": false, "introspect": true, "require_resource_names_without_spaces": false, "require_explicit_package_overrides_for_builtin_materializations": true, "quiet": false, "use_colors_file": true, "log_level_file": "debug", "use_colors": true, "exclude": [], "cache_selected_only": false, "partial_parse": true, "favor_state": false, "send_anonymous_usage_stats": true, "source_freshness_run_project_hooks": false, "indirect_selection": "eager", "select": []}}